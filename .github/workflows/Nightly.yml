name: Nightly
permissions:
  contents: none # Minimal default permissions

on:
  workflow_dispatch:
  schedule:
    - cron: "33 3 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  # The purpose of running every night is to detect when a change to
  # https://github.com/rust-lang/rust/tree/master/src/rustdoc-json-types
  # requires that we release a new version of public-api to be compatible with
  # the latest nightly toolchain
  ci:
    permissions:
      contents: read # For actions/checkout@v4 in CI.yml
    uses: ./.github/workflows/CI.yml

  # Create an issue if Nightly CI fails unless there already is such an issue.
  create-issue-on-failure:
    needs: ci
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && needs.ci.result == 'failure' }}
    permissions:
      issues: write # For `gh issue create`
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: |
          gh issue list \
            --repo cargo-public-api/cargo-public-api | grep "CI failed with " || \
          gh issue create \
            --repo cargo-public-api/cargo-public-api \
            --label automatically-created \
            --title "CI failed with \`$(date +nightly-%Y-%m-%d)\`" \
            --body $'This issue was [automatically created](https://github.com/cargo-public-api/cargo-public-api/blob/ced14726d2f91ba8c86dc916f68a8e2fff74bfa5/.github/workflows/Nightly.yml#L24) because the [Nightly](https://github.com/cargo-public-api/cargo-public-api/blob/main/.github/workflows/Nightly.yml) CI job [failed](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).\n\n### Common reasons\n\n* If the **rustdoc JSON** format changed it is usually [easy to adapt](https://github.com/cargo-public-api/cargo-public-api/blob/main/docs/CONTRIBUTING.md#how-to-adapt-to-rustdoc-json-format-changes).'

  # If Rust nightly changes output, auto-create a PR with the new blessed
  # output, which maintainers can conveniently merge after manual review. Note
  # that we must also bump MINIMUM_NIGHTLY_RUST_VERSION_FOR_TESTS to this
  # version, otherwise tests will fail.
  auto-bless:
    environment:
      name: CICD-fork
      url: https://github.com/EnselicCICD/cargo-public-api
    runs-on: ubuntu-latest
    permissions:
      contents: write # Give access to secrets.ENSELICCICD_GITHUB_TOKEN
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ENSELICCICD_GITHUB_TOKEN }} # for git push
      - run: rustup install nightly --profile minimal
      - run: sudo apt-get install -y zsh && zsh --version
      - run: ./scripts/cargo-test.sh --bless
      - name: Check for changes
        id: check-for-changes
        run: |
          echo "changes-detected=$([ -n "$(git status --porcelain)" ] && echo yes || echo no)" >> $GITHUB_OUTPUT
      - name: Create PR
        if: steps.check-for-changes.outputs.changes-detected == 'yes'
        env:
          GH_TOKEN: ${{ secrets.ENSELICCICD_GITHUB_TOKEN }} # for gh pr create
          CURRENT_JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          ./scripts/create-auto-bless-pr.sh
