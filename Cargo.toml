[workspace]
resolver = "2"
members = [
    # Helper crate to build rustdoc JSON
    "rustdoc-json",

    # Helper crate for managing rustup toolchains
    "rustup-toolchain",

    # Takes rustdoc JSON as input and outputs the corresponding public API
    "public-api",

    # High-level CLI for "rustdoc-json" and "public-api"
    "cargo-public-api",

    # Contains various repo-wide tests and utilities
    "repo-tests", "scripts/release-helper",
]

# Test APIs can't be part of the workspace because
#
#  * We do not want them to be built when someone does e.g. `cargo build`
#
#  * We do not want them to be part of Cargo.lock
#
#  * Some test crates use different directories but the same name (e.g.
#    `example_api`), which cargo does not allow.
#
#  * We do not want the test-apis to share Cargo.lock since our tests run in
#    parallel
#
exclude = [
    # Contains a public API that aim so to contain all public API item and
    # variants (with and without generics etc etc)
    "test-apis/comprehensive_api",

    # Same as 'comprehensive_api', but for proc-macro stuff, because those needs
    # to be in a separate crate, see
    # https://stackoverflow.com/questions/56713877/why-do-proc-macros-have-to-be-defined-in-proc-macro-crate
    "test-apis/comprehensive_api_proc_macro",

    # Tests that requires auto traits. Normally we omit auto trait impls because
    # they make the output very repetitive.
    "test-apis/auto_traits",

    # Contains different versions of the same small API. Used mainly to test
    # test the API-diffing functionality of this library.
    "test-apis/example_api-v0.1.0",
    "test-apis/example_api-v0.1.1",
    "test-apis/example_api-v0.2.0",
    "test-apis/example_api-v0.2.1",
    "test-apis/example_api-v0.3.0",

    # To test that we pass --cap-lints when building rustdoc JSON
    "test-apis/lint_error",

    # Has `[lib] name = "other_name"` in Cargo.toml so that package name and lib
    # name are different.
    "test-apis/other-lib-name",

    # Has `resolver = 3`.
    "test-apis/resolver-3",

    # Contains no lib, only a bin.
    "test-apis/no-lib",

    # Test for feature flags
    "test-apis/features",

    # Contains a public API that use unstable Rust features. Not used in
    # regression tests. Only use for one-off experiments, e.g. to understand
    # impact of rustdoc JSON format changes.
    "test-apis/nightly_api",
]
